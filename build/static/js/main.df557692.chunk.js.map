{"version":3,"sources":["components/DraftsPage.js","components/Post.js","components/CreatePage.js","components/PostsPage.js","components/FeedPage.js","components/DetailPage.js","components/EditPage.js","index.js"],"names":["DraftsPage","_this","this","react_default","a","createElement","react_apollo_browser_umd","query","DRAFTS_QUERY","_ref","data","loading","error","refetch","className","react","drafts","map","draft","Post_Post","key","id","post","refresh","isDraft","published","props","children","Component","gql","_templateObject","Post","_renderAction","publishMutation","mutation","PUBLISH_MUTATION","update","cache","_ref2","feed","readQuery","FEED_QUERY","writeQuery","concat","publish","_ref3","onClick","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","variables","window","location","replace","stop","deleteMutation","DELETE_MUTATION","_ref5","filter","deletePost","_ref6","_ref7","_callee2","e","_context2","confirm","preventDefault","_x","apply","arguments","console","log","action","title","content","category","date","due_date","isPending","Link","to","type","aria-label","aria-hidden","Post_templateObject","_templateObject2","CreatePage","state","_this2","CREATE_DRAFT_MUTATION","createDraft","onSubmit","_this2$state","history","autoFocus","onChange","setState","target","value","placeholder","rows","default","CreatePage_templateObject","withRouter","PostsPage","react_loader_spinner_default","color","height","width","PostsPage_templateObject","FeedPage","components_CreatePage","PostsPage_PostsPage","FeedPage_templateObject","FeedPage_templateObject2","_templateObject3","DetailPage","POST_QUERY","match","params","_ref8","DetailPage_templateObject","DetailPage_templateObject2","DetailPage_templateObject3","EditPage","postdata","UPDATE_DRAFT_MUTATION","postid","_this$state","name","_ref4","postData","editMute","message","EditPage_templateObject","EditPage_templateObject2","client","ApolloClient","uri","ReactDOM","render","BrowserRouter","Switch","Route","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.df557692.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport Post from '../components/Post'\nimport { Query } from 'react-apollo'\nimport  { gql } from 'apollo-boost'\n\nexport default class DraftsPage extends Component {\n  render() {\n    return (\n      <Query query={DRAFTS_QUERY}>\n        {({ data, loading, error, refetch }) => {\n          if (loading) {\n            return (\n              <div className=\"flex w-100 h-100 items-center justify-center pt7\">\n                <div>Loading ...</div>\n              </div>\n            )\n          }\n\n          if (error) {\n            return (\n              <div className=\"flex w-100 h-100 items-center justify-center pt7\">\n                <div>An unexpected error occured.</div>\n              </div>\n            )\n          }\n          return (\n            <Fragment>\n              <div className=\"flex justify-between items-center\">\n                <h1>Drafts</h1>\n              </div>\n              {data.drafts &&\n                data.drafts.map(draft => (\n                  <Post\n                    key={draft.id}\n                    post={draft}\n                    refresh={() => refetch()}\n                    isDraft={!draft.published}\n                  />\n                ))}\n              {this.props.children}\n            </Fragment>\n          )\n        }}\n      </Query>\n    )\n  }\n}\n\nexport const DRAFTS_QUERY = gql`\n  query DraftsQuery {\n    drafts {\n      id\n      title\n      content\n      category\n      due_date\n      published\n    }\n  }\n`\n","import React, { Component, Fragment } from 'react'\nimport { Query, Mutation } from 'react-apollo'\nimport { withRouter, Link } from 'react-router-dom'\nimport  { gql } from 'apollo-boost'\nimport { DRAFTS_QUERY } from './DraftsPage'\nimport { FEED_QUERY } from './FeedPage'\n\nexport default class Post extends Component {\n  render() {\n    console.log('Post.Js props', this.props);\n    console.log(this._renderAction(this.props.post.id));\n    let action = this._renderAction(this.props.post);\n    let title = this.props.post.title\n    let content = this.props.post.content\n    let category = this.props.post.category\n    let date = this.props.post.due_date\n\n    let isPending = '';\n    if(this.props.post.published === false) {\n      isPending = \"Pending\"\n    } else {\n      isPending = \"Completed\"\n    }\n    if (this.props.isDraft) {\n      title = `${title} (Draft)`\n    }\n\n    return (\n        <li>\n          <span className=\"label\">\n          <Link className=\"no-underline ma1\" to={`/edit/${this.props.post.id}`}>{title}</Link><br/>\n          <span className=\"smalldescription\">\n          Description: {content}<br/>\n          Status: {isPending}<br/>\n          Category: {category}<br/>\n          Due Date: {date}\n          </span>\n          </span>\n          <div className=\"actions\">\n            {/*<button className=\"btn-picto\" type=\"button\">\n              <i aria-hidden=\"true\" className=\"material-icons\">{this.props.post.published ? 'check_box' : 'check_box_outline_blank' }</i>\n            </button>*/}\n            <button className=\"btn-picto\" type=\"button\" aria-label=\"Delete\" title=\"Delete\">\n              <i aria-hidden=\"true\" className=\"material-icons\">{action}</i>\n            </button>\n          </div>\n        </li>\n    )\n  }\n  _renderAction = ({ id }) => {\n    const publishMutation = (\n      <Mutation\n        mutation={PUBLISH_MUTATION}\n        update={(cache, { data }) => {\n          const { drafts } = cache.readQuery({ query: DRAFTS_QUERY })\n          const { feed } = cache.readQuery({ query: FEED_QUERY })\n          cache.writeQuery({\n            query: FEED_QUERY,\n            data: { feed: feed.concat([data.publish]) },\n          })\n          cache.writeQuery({\n            query: DRAFTS_QUERY,\n          })\n        }}\n      >\n        {(publish, { data, loading, error }) => {\n          return (\n            <button\n              className=\"btn-picto\"\n              onClick={async () => {\n                await publish({\n                  variables: { id },\n                })\n                window.location.replace('/')\n              }}\n            >\n              {this.props.post.published ? 'check_box' : 'check_box_outline_blank' }\n            </button>\n          )\n        }}\n      </Mutation>\n    )\n    const deleteMutation = (\n      <Mutation\n        mutation={DELETE_MUTATION}\n        update={(cache, { data }) => {\n            const { feed } = cache.readQuery({ query: FEED_QUERY })\n            cache.writeQuery({\n              query: FEED_QUERY,\n              data: {\n                feed: feed.filter(post => post.id !== data.deletePost.id),\n              },\n            })\n            const { drafts } = cache.readQuery({ query: DRAFTS_QUERY })\n            cache.writeQuery({\n              query: DRAFTS_QUERY,\n              data: {\n                drafts: drafts.filter(draft => draft.id !== data.deletePost.id),\n              },\n            })\n        }}\n      >\n        {(deletePost, { data, loading, error }) => {\n          return (\n            <a onClick={async (e) => {\n                if(window.confirm(\"Are you sure you want to delete this item?\")) {\n                  await deletePost({\n                    variables: { id },\n                  })\n                  // window.location.replace('/')\n                }else {\n                  e.preventDefault()\n                }\n              }}>\n              delete\n            </a>\n          )\n        }}\n      </Mutation>\n    )\n      return (\n        <Fragment>\n          {publishMutation}\n          {deleteMutation}\n        </Fragment>\n      )\n    return deleteMutation\n  }\n}\n\nconst PUBLISH_MUTATION = gql`\n  mutation PublishMutation($id: ID!) {\n    publish(id: $id) {\n      id\n      published\n    }\n  }\n`\n\nconst DELETE_MUTATION = gql`\n  mutation DeleteMutatoin($id: ID!) {\n    deletePost(id: $id) {\n      id\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Mutation } from 'react-apollo'\nimport  { gql } from 'apollo-boost'\nimport { DRAFTS_QUERY } from './DraftsPage'\n\nclass CreatePage extends Component {\n  state = {\n    title: '',\n    content: '',\n    category: '',\n    due_date: '',\n  }\n\n  render() {\n    return (\n      <Mutation\n        mutation={CREATE_DRAFT_MUTATION}\n        update={(cache, { data }) => {\n          const { drafts } = cache.readQuery({ query: DRAFTS_QUERY })\n          console.log(data);\n          cache.writeQuery({\n            query: DRAFTS_QUERY,\n            data: { drafts: drafts.concat([data.createDraft]) },\n          })\n        }}\n      >\n        {(createDraft, { data, loading, error }) => {\n          return (\n            <div className=\"background\">\n            <h2>Add task</h2>\n            <form\n              onSubmit={async e => {\n                e.preventDefault()\n                const { title, content, category, due_date } = this.state\n                await createDraft({\n                  variables: { title, content, category, due_date },\n                })\n                this.props.history.replace('/drafts')\n                this.props.history.replace('/')\n              }}>\n              <div className=\"form-row\">\n                  <div className=\"col\">\n                    <input\n                      autoFocus\n                      className=\"form-control\"\n                      onChange={e => this.setState({ title: e.target.value })}\n                      placeholder=\"Add a to do...\"\n                      type=\"text\"\n                      value={this.state.title}\n                    />\n                    <br/>\n                  </div>\n                  <div className=\"col\">\n                    <input\n                      className=\"form-control\"\n                      onChange={e => this.setState({ content: e.target.value })}\n                      placeholder=\"Add description...\"\n                      rows={8}\n                      value={this.state.content}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                 <select\n                 id=\"inputState\"\n                 className=\"form-control\"\n                 onChange={e => this.setState({ category: e.target.value })}\n                 value={this.state.category}\n                 >\n                   <option default>Select Category</option>\n                   <option>Chores</option>\n                   <option>Entertainment</option>\n                   <option>Family</option>\n                   <option>Work</option>\n                 </select>\n                 </div>\n                  <div className=\"form-group col-md-6\">\n                  <input\n                    className=\"form-control\"\n                    onChange={e => this.setState({ due_date: e.target.value })}\n                    placeholder=\"Add due_date...\"\n                    type=\"date\"\n                    value={this.state.due_date}\n                  />\n                  </div>\n                </div>\n                 <div>\n                 </div>\n                <button type=\"submit\">Add TODO</button>\n              </form>\n            </div>\n          )\n        }}\n      </Mutation>\n    )\n  }\n\n}\n\nconst CREATE_DRAFT_MUTATION = gql`\n  mutation CreateDraftMutation($title: String!, $content: String!, $category: String!, $due_date: String!) {\n    createDraft(title: $title, content: $content, category: $category, due_date: $due_date) {\n      id\n      title\n      content\n      category\n      due_date\n    }\n  }\n`\n\nexport default withRouter(CreatePage)\n","import React, { Component, Fragment } from 'react'\nimport Post from '../components/Post'\nimport { Query } from 'react-apollo'\nimport  { gql } from 'apollo-boost'\nimport Loader from 'react-loader-spinner'\n\nexport default class PostsPage extends Component {\n  render() {\n    return (\n      <Query query={FEED_QUERY}>\n        {({ data, loading, error, refetch }) => {\n          if (loading) {\n            return (\n              <div>\n                <Loader\n                  type=\"TailSpin\"\n                  color=\"#b0b1b4\"\n                  height=\"100\"\n                  width=\"100\"\n               />\n              </div>\n            )\n          }\n\n          if (error) {\n            return (\n              <div className=\"flex w-100 h-100 items-center justify-center pt7\">\n                <div>An unexpected error occured.</div>\n              </div>\n            )\n          }\n          return (\n            <Fragment>\n              <div>\n                <br /><br />\n                <h2>Completed Tasks<span>Your completed tasks.</span></h2>\n              </div>\n              {data.feed &&\n                data.feed.map(post => (\n                  <Post\n                    key={post.id}\n                    post={post}\n                    refresh={() => refetch()}\n                    isDraft={!post.published}\n                  />\n                ))}\n              {this.props.children}\n            </Fragment>\n          )\n        }}\n      </Query>\n    )\n  }\n}\n\nexport const FEED_QUERY = gql`\n  query FeedQuery {\n    feed {\n      id\n      title\n      content\n      due_date\n      published\n    }\n  }\n`\n","import React, { Component, Fragment } from 'react'\nimport Post from '../components/Post'\nimport { Query, Mutation } from 'react-apollo'\nimport  { gql } from 'apollo-boost'\nimport { DRAFTS_QUERY } from './DraftsPage'\nimport CreatePage from './CreatePage'\nimport PostsPage from './PostsPage'\nimport Loader from 'react-loader-spinner'\n\n\nexport default class FeedPage extends Component {\n  state = {\n    title: '',\n  }\n  render() {\n    return (\n      <Query query={DRAFTS_QUERY}>\n        {({ data, loading, error, refetch }) => {\n          if (loading) {\n            return (\n              <div className=\"spinnerStyl\">\n                <Loader\n                  type=\"Puff\"\n                  color=\"#3f51b5\"\n                  height=\"200\"\n                  width=\"200\"\n               />\n              </div>\n            )\n          }\n\n          if (error) {\n            return (\n              <div className=\"flex w-100 h-100 items-center justify-center pt7\">\n                <div>An unexpected error occured.</div>\n              </div>\n            )\n          }\n\n          return (\n            <Fragment>\n\n            <main id=\"todolist\">\n              <h1>Yael's TO-DO List<span>You can add, edit, and delete tasks.</span></h1>\n              <br />\n            \n              <CreatePage />\n              <ul>\n              {data.drafts &&\n                data.drafts.map(post => (\n                  <Post\n                    key={post.id}\n                    post={post}\n                    refresh={() => refetch()}\n                  />\n                ))}\n              {this.props.children}\n              </ul>\n              </main>\n              <main id=\"donelist\">\n                <PostsPage />\n              </main>\n            </Fragment>\n          )\n        }}\n      </Query>\n    )\n  }\n\n  _renderAction = ({ id, published }) => {\n    const publishMutation = (\n      <Mutation\n        mutation={PUBLISH_MUTATION}\n        update={(cache, { data }) => {\n          const { drafts } = cache.readQuery({ query: DRAFTS_QUERY })\n          const { feed } = cache.readQuery({ query: FEED_QUERY })\n          cache.writeQuery({\n            query: FEED_QUERY,\n            data: { feed: feed.concat([data.publish]) },\n          })\n          cache.writeQuery({\n            query: DRAFTS_QUERY,\n          })\n        }}\n      >\n        {(publish, { data, loading, error }) => {\n          return (\n            <a\n              className=\"f6 dim br1 ba ph3 pv2 mb2 dib black pointer\"\n              onClick={async () => {\n                await publish({\n                  variables: { id },\n                })\n              }}\n            >\n              Publish\n            </a>\n          )\n        }}\n      </Mutation>\n    )\n    if (!published) {\n      return (\n        <Fragment>\n          {publishMutation}\n        </Fragment>\n      )\n    }\n  }\n}\n\nexport const FEED_QUERY = gql`\n  query FeedQuery {\n    feed {\n      id\n      title\n      published\n    }\n  }\n`\nconst CREATE_DRAFT_MUTATION = gql`\n  mutation CreateDraftMutation($title: String!, $content: String!, $category: String!, $due_date: String!) {\n    createDraft(title: $title, content: $content) {\n      id\n      title\n      content\n      category\n      due_date\n    }\n  }\n`\nconst PUBLISH_MUTATION = gql`\n  mutation PublishMutation($id: ID!) {\n    publish(id: $id) {\n      id\n      published\n    }\n  }\n`\n","import React, { Component, Fragment } from 'react'\nimport { Query, Mutation } from 'react-apollo'\nimport { withRouter } from 'react-router-dom'\nimport  { gql } from 'apollo-boost'\nimport { DRAFTS_QUERY } from './DraftsPage'\nimport { FEED_QUERY } from './FeedPage'\n\nclass DetailPage extends Component {\n  render() {\n    console.log('DetailsPage ====> ', this.props);\n\n    return (\n      <Query query={POST_QUERY} variables={{ id: this.props.match.params.id }}>\n        {({ data, loading, error }) => {\n          if (loading) {\n            return (\n              <div className=\"flex w-100 h-100 items-center justify-center pt7\">\n                <div>Loading ...</div>\n              </div>\n            )\n          }\n\n          if (error) {\n            return (\n              <div className=\"flex w-100 h-100 items-center justify-center pt7\">\n                <div>An unexpected error occured.</div>\n              </div>\n            )\n          }\n\n          const { post } = data\n          const action = this._renderAction(post)\n          return (\n            <Fragment>\n              <h1 className=\"f3 black-80 fw4 lh-solid\">{data.post.title}</h1>\n              {action}\n            </Fragment>\n          )\n        }}\n      </Query>\n    )\n  }\n\n  _renderAction = ({ id, published }) => {\n    const publishMutation = (\n      <Mutation\n        mutation={PUBLISH_MUTATION}\n        update={(cache, { data }) => {\n          const { drafts } = cache.readQuery({ query: DRAFTS_QUERY })\n          const { feed } = cache.readQuery({ query: FEED_QUERY })\n          cache.writeQuery({\n            query: FEED_QUERY,\n            data: { feed: feed.concat([data.publish]) },\n          })\n          cache.writeQuery({\n            query: DRAFTS_QUERY,\n            data: {\n              drafts: drafts.filter(draft => draft.id !== data.publish.id),\n            },\n          })\n        }}\n      >\n        {(publish, { data, loading, error }) => {\n          return (\n            <a\n              className=\"f6 dim br1 ba ph3 pv2 mb2 dib black pointer\"\n              onClick={async () => {\n                await publish({\n                  variables: { id },\n                })\n                this.props.history.replace('/')\n              }}\n            >\n              Publish\n            </a>\n          )\n        }}\n      </Mutation>\n    )\n    const deleteMutation = (\n      <Mutation\n        mutation={DELETE_MUTATION}\n        update={(cache, { data }) => {\n          if (published) {\n            const { feed } = cache.readQuery({ query: FEED_QUERY })\n            cache.writeQuery({\n              query: FEED_QUERY,\n              data: {\n                feed: feed.filter(post => post.id !== data.deletePost.id),\n              },\n            })\n          } else {\n            const { drafts } = cache.readQuery({ query: DRAFTS_QUERY })\n            cache.writeQuery({\n              query: DRAFTS_QUERY,\n              data: {\n                drafts: drafts.filter(draft => draft.id !== data.deletePost.id),\n              },\n            })\n          }\n        }}\n      >\n        {(deletePost, { data, loading, error }) => {\n          return (\n            <a\n              className=\"f6 dim br1 ba ph3 pv2 mb2 dib black pointer\"\n              onClick={async () => {\n                await deletePost({\n                  variables: { id },\n                })\n                this.props.history.replace('/')\n              }}\n            >\n              Delete\n            </a>\n          )\n        }}\n      </Mutation>\n    )\n    if (!published) {\n      return (\n        <Fragment>\n          {publishMutation}\n          {deleteMutation}\n        </Fragment>\n      )\n    }\n    return deleteMutation\n  }\n\n}\n\nconst POST_QUERY = gql`\n  query PostQuery($id: ID!) {\n    post(id: $id) {\n      id\n      title\n      published\n    }\n  }\n`\n\nconst PUBLISH_MUTATION = gql`\n  mutation PublishMutation($id: ID!) {\n    publish(id: $id) {\n      id\n      published\n    }\n  }\n`\n\nconst DELETE_MUTATION = gql`\n  mutation DeleteMutatoin($id: ID!) {\n    deletePost(id: $id) {\n      id\n    }\n  }\n`\n\nexport default withRouter(DetailPage)\n","import React, { Component, Fragment } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Mutation, Query } from 'react-apollo'\nimport  { gql } from 'apollo-boost'\nimport { DRAFTS_QUERY } from './DraftsPage'\nimport { FEED_QUERY } from './FeedPage'\n\nclass EditPage extends Component {\n  state = {\n    title: '',\n    content: '',\n    category: '',\n    due_date: '',\n  }\n\n  render() {\n    // let title = this.props.post.title\n    return (\n      <Query query={POST_QUERY} variables={{ id: this.props.match.params.id }}>\n        {({ data, loading, error, refetch }) => {\n          let postID = data.id;\n          let postData = data.post;\n          let editMute = this._renderAction(postData);\n          if (loading) return \"Loading...\";\n          if (error) return `Error! ${error.message}`;\n          return (\n            <div>{editMute}</div>\n          )\n        }}\n      </Query>\n    )\n  }\n  _renderAction = (postdata) => {\n    const editMutation = (\n    <Mutation\n    mutation={UPDATE_DRAFT_MUTATION}\n    update={(cache, { data }) => {\n      const { drafts } = cache.readQuery({ query: DRAFTS_QUERY })\n      const { feed } = cache.readQuery({ query: FEED_QUERY })\n      cache.writeQuery({\n        query: FEED_QUERY,\n        data: { feed: feed.concat([data.update]) },\n      })\n      cache.writeQuery({\n        query: DRAFTS_QUERY,\n        data: { feed: feed.concat([data.update]) },\n      })\n    }}\n  >\n\n    {(update, { data, loading, error }) => {\n      return (\n        <main id=\"todolist\">\n          <div className=\"background\">\n          <h2>Edit Task</h2>\n            <form\n              onSubmit={async e => {\n                e.preventDefault()\n                console.log('id', this.props.match.params.id );\n                console.log(this.state)\n                let postid = postdata.id;\n                console.log(postid);\n                const { title, content, category, due_date } = this.state\n                await update({\n                  variables: { id: postid, title: title, content: content, category: category, due_date: due_date},\n                })\n                this.props.history.replace('/drafts')\n                this.props.history.replace('/')\n              }}>\n              <input\n                autoFocus\n                onChange={e => this.setState({ title: e.target.value })}\n                placeholder={postdata.title}\n                type=\"text\"\n              />&nbsp;\n              <input\n                onChange={e => this.setState({ content: e.target.value })}\n                placeholder={postdata.content}\n                rows={8}\n              /><br/>\n              <select\n              onChange={e => this.setState({ category: e.target.value })}\n              placeholder=\"Select Category\"\n              name=\"category\">\n                 <option>{postdata.category}</option>\n                 <option value=\"Chores\">Chores</option>\n                 <option value=\"Entertainment\">Entertainment</option>\n                 <option value=\"Family\">Family</option>\n                 <option value=\"Work\">Work</option>\n               </select>\n                &nbsp;\n              <input\n                onChange={e => this.setState({ due_date: e.target.value })}\n                type=\"date\"\n                placeholder={postdata.due_date}\n                rows={8}\n                value={this.state.due_date}\n              /><br />\n              <button type=\"submit\">Update Task</button>\n            </form>\n          </div>\n        </main>\n      )\n    }}\n  </Mutation>);\n  return editMutation;\n  }\n}\n\nconst POST_QUERY = gql`\n  query PostQuery($id: ID!) {\n    post(id: $id) {\n      id\n      title\n      content\n      category\n      due_date\n      published\n    }\n  }\n`\n\nconst UPDATE_DRAFT_MUTATION = gql`\n  mutation UpdateMutation($id: ID!, $title: String, $content: String, $category: String, $due_date: String) {\n    update(id: $id, title: $title, content: $content, category: $category, due_date: $due_date) {\n      id\n      title\n      content\n      category\n      due_date\n    }\n  }\n`\n\n\nexport default withRouter(EditPage)\n","import React, {Fragment} from 'react'\nimport ReactDOM from 'react-dom'\nimport {\n  NavLink,\n  Link,\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom'\nimport { ApolloProvider } from 'react-apollo'\nimport ApolloClient from 'apollo-boost'\n\nimport FeedPage from './components/FeedPage'\nimport DraftsPage from './components/DraftsPage'\nimport CreatePage from './components/CreatePage'\nimport DetailPage from './components/DetailPage'\nimport PostsPage from './components/PostsPage'\nimport EditPage from './components/EditPage'\n\nimport 'tachyons'\nimport './index.css'\n\nconst client = new ApolloClient({ uri: 'http://localhost:4000' })\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Router>\n      <Fragment>\n        <div className=\"fl w-100 pl4 pr4\">\n          <Switch>\n            <Route exact path=\"/\" component={FeedPage} />\n            <Route path=\"/drafts\" component={DraftsPage} />\n            <Route path=\"/posts\" component={PostsPage} />\n            <Route path=\"/create\" component={CreatePage} />\n            <Route path=\"/post/:id\" component={DetailPage} />\n            <Route path=\"/edit/:id\" component={EditPage} />\n          </Switch>\n        </div>\n      </Fragment>\n    </Router>\n  </ApolloProvider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}